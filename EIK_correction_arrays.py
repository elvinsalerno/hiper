# -*- coding: utf-8 -*-
"""
Created on Tue Jan  4 15:13:05 2022

@author: hiper
"""
import numpy as np
import matplotlib.pyplot as plt
from scipy import interpolate

size = 171

output1 = np.array([0.786,0.711,0.623,0.548,0.509,0.444,0.42,0.39,0.374,0.354,0.342,0.331,0.327,0.313,0.301,0.286,0.272,0.262,0.247,0.239,0.233,0.229,0.227,0.228,0.233,0.242,0.255,0.267,0.277,0.295,0.301,0.317,0.323,0.327,0.342,0.348,0.36,0.375,0.392,0.412,0.435,0.463,0.484,0.528,0.539,0.585,0.607,0.639,0.666,0.662,0.692,0.708,0.721,0.718,0.745,0.784,0.76,0.771,0.807,0.816,0.834,0.827,0.804,0.82,0.789,0.775,0.799,0.765,0.789,0.792,0.759,0.769,0.767,0.793,0.788,0.819,0.824,0.82,0.823,0.823,0.815,0.815,0.83,0.805,0.864,0.833,0.854,0.855,0.892,0.874,0.924,0.956,0.922,0.952,0.936,1.0,0.965,0.96,0.921,0.954,0.948,0.89,0.913,0.887,0.884,0.928,0.858,0.841,0.854,0.843,0.869,0.836,0.832,0.827,0.846,0.801,0.781,0.768,0.743,0.715,0.724,0.701,0.688,0.692,0.705,0.681,0.678,0.685,0.694,0.691,0.686,0.679,0.695,0.657,0.642,0.641,0.621,0.586,0.573,0.559,0.542,0.548,0.553,0.535,0.543,0.551,0.574,0.556,0.557,0.531,0.529,0.525,0.503,0.488,0.47,0.46,0.454,0.454,0.46,0.469,0.489,0.519,0.542,0.571,0.598,0.613,0.642,0.65,0.651,0.686,0.688])
output2 = np.array([0.277,0.312,0.315,0.355,0.408,0.453,0.438,0.48,0.531,0.55,0.613,0.598,0.53,0.626,0.631,0.676,0.776,0.781,0.781,0.737,0.881,0.777,0.891,1.0,0.865,0.956,0.661,0.644,0.654,0.72,0.663,0.65,0.575,0.574,0.544,0.496,0.492,0.487,0.419,0.404,0.392,0.371,0.374,0.346,0.345,0.299,0.304,0.275,0.271,0.302,0.278,0.272,0.257,0.269,0.254,0.239,0.245,0.259,0.235,0.23,0.226,0.228,0.241,0.242,0.244,0.25,0.224,0.238,0.223,0.233,0.243,0.252,0.25,0.24,0.24,0.225,0.229,0.222,0.228,0.224,0.239,0.234,0.222,0.234,0.21,0.231,0.227,0.225,0.221,0.23,0.216,0.205,0.221,0.213,0.22,0.204,0.217,0.214,0.222,0.215,0.214,0.22,0.218,0.217,0.223,0.208,0.22,0.244,0.228,0.242,0.227,0.221,0.221,0.224,0.214,0.241,0.23,0.233,0.245,0.26,0.253,0.265,0.263,0.251,0.249,0.269,0.266,0.27,0.269,0.259,0.26,0.258,0.258,0.292,0.282,0.277,0.284,0.289,0.299,0.305,0.323,0.317,0.302,0.342,0.363,0.35,0.308,0.323,0.315,0.369,0.337,0.348,0.348,0.363,0.38,0.377,0.377,0.405,0.351,0.398,0.389,0.353,0.346,0.326,0.346,0.315,0.294,0.283,0.297,0.271,0.258])
output3 = np.array([0.996,1.0,0.928,0.801,0.591,0.521,0.526,0.456,0.375,0.354,0.287,0.298,0.354,0.263,0.256,0.234,0.191,0.184,0.192,0.213,0.157,0.195,0.156,0.124,0.154,0.127,0.228,0.228,0.211,0.17,0.195,0.19,0.24,0.237,0.242,0.278,0.276,0.274,0.328,0.341,0.36,0.366,0.348,0.382,0.383,0.45,0.447,0.482,0.484,0.423,0.448,0.462,0.488,0.469,0.508,0.515,0.543,0.471,0.528,0.568,0.543,0.529,0.533,0.529,0.544,0.516,0.586,0.555,0.584,0.528,0.542,0.472,0.52,0.521,0.517,0.561,0.519,0.558,0.542,0.552,0.493,0.549,0.556,0.537,0.589,0.504,0.536,0.544,0.543,0.553,0.543,0.599,0.559,0.527,0.556,0.556,0.504,0.573,0.553,0.508,0.543,0.539,0.567,0.594,0.51,0.545,0.581,0.49,0.524,0.498,0.493,0.546,0.579,0.554,0.571,0.502,0.538,0.556,0.524,0.483,0.496,0.467,0.494,0.494,0.508,0.461,0.479,0.465,0.46,0.493,0.519,0.521,0.483,0.422,0.466,0.441,0.458,0.469,0.459,0.445,0.4,0.418,0.443,0.379,0.346,0.342,0.4,0.396,0.417,0.342,0.409,0.359,0.374,0.349,0.342,0.349,0.362,0.311,0.395,0.321,0.311,0.361,0.359,0.377,0.34,0.397,0.436,0.447,0.398,0.452,0.505])

fnmr = np.linspace(93.55,94.40, size)

correction = output1 * output2 *output3
correction = np.round_(correction/ np.max(correction) , 3)
plt.plot(fnmr, correction,'g', label = 'amplitude')
plt.xlim(93.55,94.40)
plt.ylim(0,1.05)
print('correction :')
print(*correction, sep=',')
plt.legend()

   #%%

EIK_correction = np.array([0.788,0.774,0.754,0.727,0.699,0.686,0.669,0.651,0.628,0.619,0.608,0.591,0.584,0.568,0.558,0.558,0.543,0.543,0.533,0.525,0.514,0.517,0.516,0.508,0.516,0.505,0.505,0.501,0.492,0.503,0.497,0.492,0.493,0.492,0.48,0.479,0.482,0.479,0.461,0.466,0.466,0.46,0.455,0.453,0.452,0.445,0.437,0.431,0.431,0.425,0.431,0.424,0.422,0.427,0.415,0.42,0.423,0.422,0.418,0.422,0.423,0.423,0.437,0.439,0.439,0.446,0.45,0.45,0.463,0.467,0.467,0.473,0.486,0.48,0.491,0.486,0.493,0.501,0.501,0.513,0.515,0.516,0.518,0.519,0.522,0.534,0.531,0.534,0.536,0.536,0.539,0.545,0.551,0.555,0.56,0.563,0.567,0.577,0.586,0.588,0.593,0.607,0.618,0.625,0.633,0.64,0.647,0.658,0.673,0.682,0.689,0.702,0.707,0.717,0.727,0.737,0.746,0.749,0.758,0.766,0.77,0.773,0.779,0.785,0.787,0.793,0.798,0.8,0.805,0.807,0.808,0.813,0.817,0.821,0.824,0.828,0.828,0.836,0.84,0.843,0.848,0.852,0.859,0.862,0.867,0.869,0.872,0.876,0.879,0.884,0.885,0.885,0.885,0.884,0.888,0.884,0.885,0.885,0.883,0.879,0.88,0.873,0.873,0.872,0.871,0.866,0.865,0.861,0.86,0.861,0.86,0.857,0.857,0.859,0.854,0.855,0.853,0.858,0.86,0.86,0.86,0.862,0.865,0.865,0.868,0.869,0.874,0.872,0.877,0.879,0.88,0.879,0.881,0.881,0.881,0.882,0.881,0.884,0.884,0.884,0.885,0.885,0.885,0.886,0.885,0.888,0.887,0.892,0.893,0.894,0.896,0.899,0.902,0.905,0.909,0.914,0.917,0.923,0.929,0.937,0.941,0.947,0.949,0.957,0.961,0.963,0.969,0.975,0.978,0.982,0.985,0.988,0.993,0.992,0.994,0.996,0.997,0.997,1.0,0.998,0.994,0.996,0.997,0.992,0.988,0.986,0.982,0.98,0.976,0.973,0.968,0.966,0.965,0.961,0.959,0.956,0.954,0.951,0.948,0.947,0.945,0.942,0.942,0.94,0.941,0.939,0.937,0.934,0.932,0.93,0.925,0.924,0.921,0.919,0.918,0.919,0.914,0.91,0.906,0.907,0.903,0.899,0.897,0.891,0.889,0.883,0.88,0.875,0.872,0.866,0.866,0.857,0.855,0.853,0.847,0.845,0.84,0.836,0.829,0.825,0.82,0.817,0.815,0.812,0.808,0.81,0.805,0.807,0.802,0.804,0.801,0.802,0.803,0.804,0.806,0.807,0.808,0.808,0.81,0.809,0.809,0.812,0.81,0.815,0.814,0.814,0.816,0.812,0.811,0.807,0.808,0.804,0.802,0.796,0.791,0.788,0.783,0.774,0.771,0.766,0.761,0.753,0.745,0.741,0.736,0.731,0.724,0.721,0.718,0.716,0.718,0.715,0.711,0.707,0.709,0.71,0.713,0.715,0.715,0.717,0.718,0.72,0.725,0.723,0.725,0.73,0.723,0.729,0.722,0.722,0.724,0.716,0.717,0.712,0.708,0.708,0.7,0.698,0.686,0.693,0.679,0.675,0.669,0.666,0.662,0.656,0.654,0.651,0.644,0.644,0.636,0.64,0.64,0.636,0.642,0.643,0.646,0.657,0.661,0.664,0.669,0.679,0.688,0.69,0.702,0.713,0.719,0.729,0.738,0.747,0.749,0.757,0.767,0.772,0.781,0.784,0.787,0.784,0.799,0.801,0.797,0.803,0.804,0.81,0.807,0.809])
interp_func_output=interpolate.interp1d(fnmr,EIK_correction,kind='cubic' , fill_value="extrapolate")

fwant = np.linspace(93.55,94.40, 101)

amplitude =[interp_func_output(item) for item in fwant]
amplitude = np.round(amplitude/np.max(amplitude),3)
print('amplitude :')
print(*amplitude, sep=',')